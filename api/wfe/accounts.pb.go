// Code generated by protoc-gen-gogo.
// source: accounts.proto
// DO NOT EDIT!

/*
Package wfe is a generated protocol buffer package.

It is generated from these files:
	accounts.proto

It has these top-level messages:
	CreatedAccount
	NewAccount
*/
package wfe

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

type CreatedAccount struct {
	UID int32 `protobuf:"varint,1,opt,name=UID,json=uID,proto3" json:"UID,omitempty"`
}

func (m *CreatedAccount) Reset()                    { *m = CreatedAccount{} }
func (m *CreatedAccount) String() string            { return proto.CompactTextString(m) }
func (*CreatedAccount) ProtoMessage()               {}
func (*CreatedAccount) Descriptor() ([]byte, []int) { return fileDescriptorAccounts, []int{0} }

type NewAccount struct {
	Login    string `protobuf:"bytes,1,opt,name=Login,json=login,proto3" json:"Login,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=Password,json=password,proto3" json:"Password,omitempty"`
	UID      int32  `protobuf:"varint,4,opt,name=UID,json=uID,proto3" json:"UID,omitempty"`
}

func (m *NewAccount) Reset()                    { *m = NewAccount{} }
func (m *NewAccount) String() string            { return proto.CompactTextString(m) }
func (*NewAccount) ProtoMessage()               {}
func (*NewAccount) Descriptor() ([]byte, []int) { return fileDescriptorAccounts, []int{1} }

func init() {
	proto.RegisterType((*CreatedAccount)(nil), "wfe.CreatedAccount")
	proto.RegisterType((*NewAccount)(nil), "wfe.NewAccount")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Accounts service

type AccountsClient interface {
	Create(ctx context.Context, in *NewAccount, opts ...grpc.CallOption) (*CreatedAccount, error)
}

type accountsClient struct {
	cc *grpc.ClientConn
}

func NewAccountsClient(cc *grpc.ClientConn) AccountsClient {
	return &accountsClient{cc}
}

func (c *accountsClient) Create(ctx context.Context, in *NewAccount, opts ...grpc.CallOption) (*CreatedAccount, error) {
	out := new(CreatedAccount)
	err := grpc.Invoke(ctx, "/wfe.Accounts/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Accounts service

type AccountsServer interface {
	Create(context.Context, *NewAccount) (*CreatedAccount, error)
}

func RegisterAccountsServer(s *grpc.Server, srv AccountsServer) {
	s.RegisterService(&_Accounts_serviceDesc, srv)
}

func _Accounts_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wfe.Accounts/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).Create(ctx, req.(*NewAccount))
	}
	return interceptor(ctx, in, info, handler)
}

var _Accounts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wfe.Accounts",
	HandlerType: (*AccountsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Accounts_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptorAccounts,
}

var fileDescriptorAccounts = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x4c, 0x4e, 0xce,
	0x2f, 0xcd, 0x2b, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x4f, 0x4b, 0x55,
	0x52, 0xe2, 0xe2, 0x73, 0x2e, 0x4a, 0x4d, 0x2c, 0x49, 0x4d, 0x71, 0x84, 0xc8, 0x0a, 0x09, 0x70,
	0x31, 0x87, 0x7a, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x31, 0x97, 0x7a, 0xba, 0x28,
	0xa5, 0x71, 0x71, 0xf9, 0xa5, 0x96, 0xc3, 0xe4, 0x45, 0xb8, 0x58, 0x7d, 0xf2, 0xd3, 0x33, 0xf3,
	0xc0, 0x2a, 0x38, 0x83, 0x58, 0x73, 0x40, 0x1c, 0x90, 0xa8, 0x6b, 0x6e, 0x62, 0x66, 0x8e, 0x04,
	0x13, 0x44, 0x34, 0x15, 0xc4, 0x11, 0x92, 0xe2, 0xe2, 0x08, 0x48, 0x2c, 0x2e, 0x2e, 0xcf, 0x2f,
	0x4a, 0x91, 0x60, 0x06, 0x4b, 0x70, 0x14, 0x40, 0xf9, 0x30, 0x7b, 0x58, 0xe0, 0xf6, 0x18, 0x59,
	0x71, 0x71, 0x40, 0x2d, 0x29, 0x16, 0xd2, 0xe3, 0x62, 0x83, 0xb8, 0x4b, 0x88, 0x5f, 0x0f, 0xe8,
	0x4e, 0x3d, 0x84, 0x03, 0xa4, 0x84, 0xc1, 0x02, 0xa8, 0xae, 0x4e, 0x62, 0x03, 0xfb, 0xc9, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x8c, 0xb9, 0x7d, 0xe5, 0x00, 0x00, 0x00,
}
