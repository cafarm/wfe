# Environment variables
option_settings:
  - option_name: WFE_TLS_KEY
    value: /etc/pki/tls/certs/server.key
  - option_name: WFE_TLS_CERT
    value: /etc/pki/tls/certs/server.crt

files:
  # NGINX config
  /etc/nginx/conf.d/https.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS Server

      server {
        listen 443;
        server_name localhost;

        ssl on;
        ssl_certificate /etc/pki/tls/certs/server.crt;
        ssl_certificate_key /etc/pki/tls/certs/server.key;

        ssl_session_timeout 5m;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_prefer_server_ciphers on;

        location / {
          proxy_pass https://docker;
          proxy_http_version 1.1;

          proxy_set_header Connection "";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
      }

  # Public key
  /etc/pki/tls/certs/server.crt:
    mode: "000400"
    owner: root
    group: root
    content: |
      -----BEGIN CERTIFICATE-----
      MIID6DCCAtACCQCCQY+6W4IhwjANBgkqhkiG9w0BAQUFADCBtTELMAkGA1UEBhMC
      VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1NlYXR0bGUxIjAgBgNV
      BAoTGUNvbGxhYm9yYXRpb24gaW4gdGhlIFdpbGQxLzAtBgNVBAMTJndmZS1kZXYu
      dXMtd2VzdC0yLmVsYXN0aWNiZWFuc3RhbGsuY29tMSowKAYJKoZIhvcNAQkBFhtz
      b2NoYXMtcmFzQHUud2FzaGluZ3Rvbi5lZHUwHhcNMTYwNzI0MDcxMTM5WhcNMTcw
      NzI0MDcxMTM5WjCBtTELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
      EDAOBgNVBAcTB1NlYXR0bGUxIjAgBgNVBAoTGUNvbGxhYm9yYXRpb24gaW4gdGhl
      IFdpbGQxLzAtBgNVBAMTJndmZS1kZXYudXMtd2VzdC0yLmVsYXN0aWNiZWFuc3Rh
      bGsuY29tMSowKAYJKoZIhvcNAQkBFhtzb2NoYXMtcmFzQHUud2FzaGluZ3Rvbi5l
      ZHUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqvsXAl71dnuPHuZ2y
      octH07Eq8Rz78T+tML9X5GCjvrpxYVm65j8VoIjiJUUukj/Hfo7wTL9J+Oh1u2Ql
      TWM4SOuUcEOul1JBaUfK+gwLEbOdnSIeqU6hRv8cRuB5shDbsZSKDCJonQlsVTPy
      aRKU4EvE2BAVueeK7Q89LLSuuLXsSkbr6TKrbz1rujp8rP8BJZsX8dEv1M1/pN5z
      DUHyYAiOdTHJS/FfqKLuXe0IICmCnvWmXpWt2WljKXL30FbSBAPrQ8MWxXhw/JTA
      b34UmfiERNTtYWcc7Vhdx3FL2VveNIin9zOoEVOUDhILC29yMvRw1l9ABnHuzuDw
      xHa3AgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAEXo3Ev/bZECsQYMVTKHeUsGs5U1
      YCcJ+GbRIscb+CBZi8e6cKbAd7zutkD8ijho7aoI4L09HuTfvMCgwef8ZVThPsSz
      ie9etg1mliP7L8E13Tfzw7z5H5f1ik0vFo71mwMbaHjCVC4wjyPAowqP8O0MJgTt
      DnrRNOvL0lufXdI6GeGR22F8jkcFvY82qXdJlcaEtiilE3tW3tyYYOr6hOQWK2p4
      mQnx3ApZgkVPOSqJ1eqHQO1SgNZk+OfNBUKRPUFwQ+t5RbE95K3c30mZ8tjEnjt2
      5qPvzHgIonnkqUERFmgtf/QvlkE7tgag0x1QgxU4xZx5YXcKotr2coMVBjc=
      -----END CERTIFICATE-----

  # Private key
  /etc/pki/tls/certs/server.key:
    mode: "000400"
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://s3-us-west-2.amazonaws.com/elasticbeanstalk-us-west-2-827562370231/server.key

Resources:
  # Allow traffic on port 443
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

  # Allow instance to authenticate with S3
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "s3"
          buckets: ["elasticbeanstalk-us-west-2-827562370231"]
          roleName:
            "Fn::GetOptionSetting":
              Namespace: "aws:autoscaling:launchconfiguration"
              OptionName: "IamInstanceProfile"
              DefaultValue: "aws-elasticbeanstalk-ec2-role"