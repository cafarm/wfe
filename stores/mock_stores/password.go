// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/citwild/wfe/stores (interfaces: Password)

package mock_stores

import (
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
)

// Mock of Password interface
type MockPassword struct {
	ctrl     *gomock.Controller
	recorder *_MockPasswordRecorder
}

// Recorder for MockPassword (not exported)
type _MockPasswordRecorder struct {
	mock *MockPassword
}

func NewMockPassword(ctrl *gomock.Controller) *MockPassword {
	mock := &MockPassword{ctrl: ctrl}
	mock.recorder = &_MockPasswordRecorder{mock}
	return mock
}

func (_m *MockPassword) EXPECT() *_MockPasswordRecorder {
	return _m.recorder
}

func (_m *MockPassword) SetPassword(_param0 context.Context, _param1 int32, _param2 string) error {
	ret := _m.ctrl.Call(_m, "SetPassword", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPasswordRecorder) SetPassword(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetPassword", arg0, arg1, arg2)
}
